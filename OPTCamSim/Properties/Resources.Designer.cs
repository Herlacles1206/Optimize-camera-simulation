//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OPTCAMSim.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OPTCAMSim.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap done {
            get {
                object obj = ResourceManager.GetObject("done", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap err {
            get {
                object obj = ResourceManager.GetObject("err", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #version 420 core
        ///out vec4 FragColor;
        ///
        ///in vec3 FragPos;  
        ///in vec3 Normal; 
        ///in vec3 objectColor;
        ///in vec2 texCoord;
        ///in float TexInd;
        ///in vec4 FragPosLightSpace;
        ///
        ///uniform vec3 lightPos; 
        ///uniform vec3 lightColor;
        ///uniform vec3 viewPos;
        ///
        ///uniform sampler2D texture0;
        ///uniform sampler2D texture1;
        ///uniform sampler2D shadowMap; //shadow
        ///float ShadowCalculation(vec4 fragPosLightSpace, vec3 normal, vec3 lightDir)
        ///{
        ///    // perform perspective divide
        ///    vec3 projCoords = fragPosLightSpace.xyz / fragPosLi [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string main_shader_fs {
            get {
                return ResourceManager.GetString("main_shader_fs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #version 420 core
        ///uniform mat4 projection;
        ///uniform mat4 view;
        ///uniform mat4 model;
        ///uniform mat4 light_view;
        ///uniform mat4 light_proj;
        ///
        ///layout(location = 0) in vec3 aPos;
        ///layout (location = 1) in vec3 aNormal;
        ///layout (location = 2) in vec3 aColor;
        ///layout(location = 3) in vec2 aTexCoord;
        ///layout(location = 4) in float aTexInd;
        ///
        ///out vec3 FragPos;  
        ///out vec3 Normal;
        ///out vec3 objectColor;
        ///out vec2 texCoord;
        ///out float TexInd;
        ///out vec4 FragPosLightSpace;
        ///void main()
        ///{
        ///    FragPos = vec3(model * v [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string main_shader_vs {
            get {
                return ResourceManager.GetString("main_shader_vs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pause {
            get {
                object obj = ResourceManager.GetObject("pause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play {
            get {
                object obj = ResourceManager.GetObject("play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string shadows_shader_fs {
            get {
                return ResourceManager.GetString("shadows_shader_fs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string shadows_shader_vs {
            get {
                return ResourceManager.GetString("shadows_shader_vs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop {
            get {
                object obj = ResourceManager.GetObject("stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap wait {
            get {
                object obj = ResourceManager.GetObject("wait", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}

#version 420 core
uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;
uniform mat4 light_view;
uniform mat4 light_proj;

layout(location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec3 aColor;
layout(location = 3) in vec2 aTexCoord;
layout(location = 4) in float aTexInd;

out vec3 FragPos;  
out vec3 Normal;
out vec3 objectColor;
out vec2 texCoord;
out float TexInd;
out vec4 FragPosLightSpace;
void main()
{
    FragPos = vec3(model * vec4(aPos, 1.0));
    Normal = aNormal;  
    objectColor = aColor;
    texCoord = aTexCoord;
    TexInd = aTexInd;
    gl_Position = projection * view * vec4(FragPos, 1.0);
    mat4 lightSpace = light_proj * light_view;
    FragPosLightSpace = lightSpace * vec4(FragPos, 1.0);
}